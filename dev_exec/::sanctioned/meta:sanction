#!/usr/local/bin/xs -f
// vim: et ts=4 sw=4 ft=ron
Script([

    Let ("DEV_EXEC", Expr ("dev_exec/")),
    Let ("SANC", Expr ("::sanctioned/")),

    // TODO: stdlib
    Alias ("prefix",
        Exec (output: String,
            cmd: "xs",
            args: [
                "-ah", "prefix", (var: "prefix:in.prefix"),
                "-ah", "value", (var: "prefix:in.value"),
                "-c",
                r####"
                    Script([
                        WriteFile("/dev/stdout", (var: "prefix")),
                        WriteFile("/dev/stdout", (var: "value")),
                    ])
                "####,
            ],
        )
    ),

    Let ("prefix:in.prefix", Expr ((var: "DEV_EXEC"))),
    Let ("prefix:in.value", Expr ((var: "SANC"))),
    Let ("dest_dir", AliasStmt ("prefix")),
    // dev_exec/::sanctioned
//    WriteFile ("/dev/stderr", (var: "dest_dir")),
//    WriteFile ("/dev/stderr", "
//"),

    Let ("prefix:in.prefix", Expr ((var: "DEV_EXEC"))),
    Let ("prefix:in.value", Expr ((var: "name"))),
    Let ("mv:in.source", AliasStmt ("prefix")),
    // dev_exec/SCRIPT
//    WriteFile ("/dev/stderr", (var: "mv:in.source")),
//    WriteFile ("/dev/stderr", "
//"),

    Let ("prefix:in.prefix", Expr ((var: "dest_dir"))),
    Let ("prefix:in.value", Expr ((var: "name"))),
    Let ("mv:in.destination", AliasStmt ("prefix")),
    // dev_exec/::sanctioned/SCRIPT
//    WriteFile ("/dev/stderr", (var: "mv:in.destination")),
//    WriteFile ("/dev/stderr", "
//"),

    Let ("prefix:in.prefix", Expr ("../../")),
    Let ("prefix:in.value", Expr ((var: "mv:in.destination"))),
    Let ("bin:in.source", AliasStmt ("prefix")),
    // ../../dev_exec/::sanctioned/SCRIPT
//    WriteFile ("/dev/stderr", (var: "bin:in.source")),
//    WriteFile ("/dev/stderr", "
//"),

    Let ("prefix:in.prefix", Expr (".local/bin.edge/")),
    Let ("prefix:in.value", Expr ((var: "name"))),
    Let ("bin:in.destination", AliasStmt ("prefix")),
    // .local/bin.edge/SCRIPT
//    WriteFile ("/dev/stderr", (var: "bin:in.destination")),
//    WriteFile ("/dev/stderr", "
//"),

    Exec (output: Display,
        cmd: "mkdir",
        args: ["-p", (var: "dest_dir")],
    ),
    Exec (output: Display,
        cmd: "git",
        args: [
            "mv", "--force",
            (var: "mv:in.source"),
            (var: "mv:in.destination"),
        ]
    ),
    Exec (output: Display,
        cmd: "ln",
        args: [
            "-svf",
            (var: "bin:in.source"),
            (var: "bin:in.destination"),
        ],
    ),
    Exec (output: Display,
        cmd: "git",
        args: [
            "add", "--force",
            (var: "bin:in.destination"),
        ],
    ),
])//Script
