#!/usr/local/bin/xs -f
// vim: et ts=4 sw=4 ft=ron
Script([
    Let ("link.xs", Expr(r####"
        Script([
            Let ("COL0", Expr ((bs:
                // \x1b [   3  8   ;   5   ;   1  9  2   m
                [  27,  91, 51,56, 59, 53, 59, 49,57,50, 109]
            ))),
            Let ("COL1", Expr ((bs:
                // \x1b [   3  8   ;   5   ;   1  1  1   m
                [  27,  91, 51,56, 59, 53, 59, 49,49,49, 109]
            ))),
            Let ("COL2", Expr ((bs:
                // \x1b [   3  8   ;   5   ;   1  1  2   m
                [  27,  91, 51,56, 59, 53, 59, 49,49,50, 109]
            ))),
            Let ("COL3", Expr ((bs:
                // \x1b [   3  8   ;   5   ;   2  2  2   m
                [  27,  91, 51,56, 59, 53, 59, 50,50,50, 109]
            ))),
            Let ("RESET", Expr ((bs:
                // \x1b [   m
                [  27,  91, 109]
            ))),
            ////TODO: built-in format/something
            //WriteFile ("/dev/stderr", " ["),
            WriteFile ("/dev/stderr", (var: "COL0")),
            WriteFile ("/dev/stderr", "bin"),
            WriteFile ("/dev/stderr", (var: "RESET")),
            WriteFile ("/dev/stderr", (bs: [0xf0, 0x9f, 0x95, 0xb8, 0x20])),
            //WriteFile ("/dev/stderr", "] "),
            WriteFile ("/dev/stderr", (var: "COL1")),
            WriteFile ("/dev/stderr", (var: "link:in.target")),
            WriteFile ("/dev/stderr", (var: "RESET")),
            WriteFile ("/dev/stderr", (bs: [0x0a])),
            Exec (output: Display,
                cmd: "ln",
                args: [
                    "-sf",
                    (var: "link:in.target"),
                    ".local/bin.edge/",
                ],
            ),
        ])//Script
    "####)),

    // List of all sanctioned scripts
    Alias ("scripts",
        Exec (output: Stream,
            cmd: "gfind",
            // Switch to target dir for links, so that the output og
            // `gfind` is the complete link path, ready to use in the command.
            cwd: Some(".local/bin.edge"),
            args: [
                "../../dev_exec/::sanctioned",
                "-mindepth", "1",
                "-maxdepth", "1",
                "-type", "f",
                "-print0",
            ],
            env: {
                "PATH": "/usr/local/bin",
            },
        )
    ),

    // Remove existing bin-link dir
    Exec (
        cmd: "rm",
        args: ["-rf", ".local/bin.edge"]
    ),
    // Recreate it
    Exec (
        cmd: "mkdir",
        args: ["-p", ".local/bin.edge"]
    ),
    // Link sanctioned scripts.
    Exec (output: Display,
        cmd: "xargs",
        args: [
            "-0", "-I:::",
            "xs",
            "-ah", "link:in.target", ":::",
            "-c", (var: "link.xs"),
        ],
        stdin: Source("scripts"), cwd: Some("."),
    ),

    // List of cargo artifacts
    Let ("cargos", Expr([
        "../../.cache/cargo/debug/xs",
        "../../.cache/cargo/debug/xc",
        "../../.cache/cargo/debug/xr",
    ])),
    ForEach ("cargos",
        Exec (output: Display,
            cmd: "xs",
            args: [
                "-c", (var: "link.xs"),
                "-ah", "link:in.target", Each,
            ]
        )
    )
])//Script
